version: '3.1'
services:
  postgres:
    image: postgres:16
    ports:
      - ${PGPORT}:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./initdb.d-postgres:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: psql -U postgres -d chinook -c "select count(*) from \"Artist\""
  mongo:
    image: mongo:6
    restart: always
    ports:
      - ${MGPORT}:27017
    environment:
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_ROOT_USERNAME: mongo
    volumes:
      - ./initdb.d-mongo:/docker-entrypoint-initdb.d:ro
    depends_on:
      postgres:
        condition: service_healthy
  migrate:
    profiles: [disabled]
    build: .
    depends_on:
      postgres:
        condition: service_healthy
  mongo_data_connector:
    image: hasura/mongo-data-connector:v2.38.0
    depends_on:
      - mongo
    restart: always
  hasura_1:
    image: hasura/graphql-engine:v2.40.0.cli-migrations-v3
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - ${HGPORT_1}:8080
    healthcheck:
      test: curl -s http://localhost:8080/healthz
      start_period: 60s
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: hasura
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_EE_LICENSE_KEY: ${HASURA_GRAPHQL_EE_LICENSE_KEY}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_MAX_CACHE_SIZE: 200
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres/metadata_1
      POSTGRES_URL: postgres://postgres:postgres@postgres/chinook
    volumes:
      - ./metadata_1/metadata:/hasura-metadata:ro
  hasura_2:
    image: hasura/graphql-engine:v2.40.0.cli-migrations-v3
    depends_on:
      - mongo_data_connector
    restart: always
    ports:
      - ${HGPORT_2}:8080
    healthcheck:
      test: curl -s http://localhost:8080/healthz
      start_period: 60s
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: hasura
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_EE_LICENSE_KEY: ${HASURA_GRAPHQL_EE_LICENSE_KEY}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_MAX_CACHE_SIZE: 200
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres/metadata_2
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"Mongo":{"uri":"http://mongo_data_connector:3000"}}}}'
    volumes:
      - ./metadata_2/metadata:/hasura-metadata:ro
  hasura_3:
    image: hasura/graphql-engine:v2.40.0.cli-migrations-v3
    restart: always
    ports:
      - ${HGPORT_3}:8080
    healthcheck:
      test: curl -s http://localhost:8080/healthz
      start_period: 60s
    environment:
      ALGOLIA_API_KEY: ${ALGOLIA_API_KEY}
      ALGOLIA_APPLICATION_ID: ${ALGOLIA_APPLICATION_ID}
      HASURA_GRAPHQL_ADMIN_SECRET: hasura
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_EE_LICENSE_KEY: ${HASURA_GRAPHQL_EE_LICENSE_KEY}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_MAX_CACHE_SIZE: 200
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres/metadata_3
    volumes:
      - ./metadata_3/metadata:/hasura-metadata:ro
