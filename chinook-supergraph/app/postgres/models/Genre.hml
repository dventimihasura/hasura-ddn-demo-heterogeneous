---
kind: ObjectType
version: v1
definition:
  name: Genre
  fields:
    - name: genreId
      type: Int4!
    - name: name
      type: Varchar
  graphql:
    typeName: App_Genre
    inputTypeName: App_GenreInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: Genre
      fieldMapping:
        genreId:
          column:
            name: GenreId
        name:
          column:
            name: Name

---
kind: TypePermissions
version: v1
definition:
  typeName: Genre
  permissions:
    - role: admin
      output:
        allowedFields:
          - genreId
          - name

---
kind: ObjectBooleanExpressionType
version: v1
definition:
  name: GenreBoolExp
  objectType: Genre
  dataConnectorName: postgres
  dataConnectorObjectType: Genre
  comparableFields:
    - fieldName: genreId
      operators:
        enableAll: true
    - fieldName: name
      operators:
        enableAll: true
  graphql:
    typeName: App_GenreBoolExp

---
kind: Model
version: v1
definition:
  name: Genre
  objectType: Genre
  source:
    dataConnectorName: postgres
    collection: Genre
  filterExpressionType: GenreBoolExp
  orderableFields:
    - fieldName: genreId
      orderByDirections:
        enableAll: true
    - fieldName: name
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: app_genre
    selectUniques:
      - queryRootField: app_genreByGenreId
        uniqueIdentifier:
          - genreId
    orderByExpressionType: App_GenreOrderBy

---
kind: ModelPermissions
version: v1
definition:
  modelName: Genre
  permissions:
    - role: admin
      select:
        filter: null

---
kind: Relationship
version: v1
definition:
  name: tracks
  source: Genre
  target:
    model:
      name: Track
      relationshipType: Array
  mapping:
    - source:
        fieldPath:
          - fieldName: genreId
      target:
        modelField:
          - fieldName: genreId

